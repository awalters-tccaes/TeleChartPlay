@page "/d3"

<h3>D3</h3>



<script src="https://d3js.org/d3.v4.js"></script>

<div style="width=100%; height=100%"id="my_dataviz"></div>


<script>
    var jsonStr = {
  "nodes": [
    {
      "id": 1,
      "name": "Antwone-1"
    },
    {
      "id": 2,
                "name": "Antwone-2"
    },
    {
      "id": 3,
                "name": "Antwone-3"
    },
    {
      "id": 4,
                "name": "Antwone-4"
    },
    {
      "id": 5,
                "name": "Antwone-5"
    },
    {
      "id": 6,
                "name": "Antwone-6"
    },
    {
      "id": 7,
                "name": "Antwone-7"
    },
    {
      "id": 8,
                "name": "Antwone-8"
    },
    {
      "id": 9,
                "name": "Antwone-9"
    },
    {
      "id": 10,
                "name": "Antwone-10"
    }
  ],
  "links": [

    {
      "source": 1,
      "target": 2
    },
    {
      "source": 1,
      "target": 5
    },
    {
      "source": 1,
      "target": 6
    },

    {
      "source": 2,
      "target": 3
    },
            {
      "source": 2,
      "target": 7
    }
    ,

    {
      "source": 3,
      "target": 4
    },
     {
      "source": 8,
      "target": 3
    }
    ,
    {
      "source": 4,
      "target": 5
    }
    ,

    {
      "source": 4,
      "target": 9
    },
    {
      "source": 5,
      "target": 10
    }
  ]
}
    // set the dimensions and margins of the graph
    var margin = { top: 10, right: 30, bottom: 30, left: 40 },
    width = 1200 - margin.left - margin.right,
    height = 800 - margin.top - margin.bottom;
    console.log("width=" + width);
    console.log("height=" + height);

    // append the svg object to the body of the page
    var svg = d3.select("#my_dataviz")
        .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform",
            "translate(" + margin.left + "," + margin.top + ")");

    function doCharting (data) {

        // Initialize the links
        var link = svg
            .selectAll("line")
            .data(data.links)
            .enter()
            .append("line")
            .style("stroke", "#aaa")

        // Initialize the nodes
        var node = svg
            .selectAll("circle")
            .data(data.nodes)
            .enter()
            .append("circle")
            .attr("r", 20)
            .style("fill", "#69b3a2")


        var labels = svg.selectAll(".label")
            .data(data.nodes)
            .enter().append("text")
            .attr("class", "label")
            .attr("dx", 10)
            .attr("dy", ".35em")
            .text(d => d.name);

        // Let's list the force we wanna apply on the network
        var simulation = d3.forceSimulation(data.nodes)                 // Force algorithm is applied to data.nodes
            .force("link", d3.forceLink()                               // This force provides links between nodes
                .id(function (d) { return d.id; })                     // This provide  the id of a node
                .links(data.links)                                    // and this the list of links
            )
            .force("charge", d3.forceManyBody().strength(-800))         // This adds repulsion between nodes. Play with the -400 for the repulsion strength
            .force("center", d3.forceCenter(width / 2, height / 2))     // This force attracts nodes to the center of the svg area
            .on("end", ticked);

        // This function is run at each iteration of the force algorithm, updating the nodes position.
        function ticked() {
            link
                .attr("x1", function (d) { return d.source.x; })
                .attr("y1", function (d) { return d.source.y; })
                .attr("x2", function (d) { return d.target.x; })
                .attr("y2", function (d) { return d.target.y; });

            node
                .attr("cx", function (d) { return d.x + 6; })
                .attr("cy", function (d) { return d.y - 6; });

            labels.attr("x", d => d.x)
                .attr("y", d => d.y);
        }

    };

    doCharting(jsonStr);


</script>

@code {

}
